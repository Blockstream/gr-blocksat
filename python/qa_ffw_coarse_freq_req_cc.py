#!/usr/bin/env python2
# -*- coding: utf-8 -*-
#
# Copyright 2019 <+YOU OR YOUR COMPANY+>.
#
# This is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this software; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
#

from gnuradio import gr, gr_unittest
from gnuradio import blocks
import blocksat_swig as blocksat

class qa_ffw_coarse_freq_req_cc (gr_unittest.TestCase):

    def setUp (self):
        self.tb = gr.top_block ()

    def tearDown (self):
        self.tb = None

    def test_001_t (self):
        # Parameters
        N_fft     = 128
        alpha     = 1.0
        M         = 2
        samp_rate = 1e6

        # Constants
        Fe         = 0.009           # normalized freq. error
        rx_samples = (0.0002 - 0.0002j, 0.0009 - 0.0008j, 0.0009 - 0.0007j,
                      -0.0000 + 0.0000j, -0.0008 + 0.0005j, -0.0002 + 0.0001j, 0.0007 -
                      0.0003j, 0.0012 - 0.0005j, 0.0010 - 0.0004j, 0.0008 - 0.0002j, -0.0002
                      + 0.0000j, -0.0013 + 0.0002j, -0.0015 - 0.0001j, -0.0004 - 0.0012j,
                      0.0012 - 0.0011j, 0.0020 + 0.0001j, 0.0014 + 0.0014j, 0.0004 + 0.0016j,
                      -0.0010 + 0.0001j, -0.0015 - 0.0018j, -0.0006 - 0.0027j, 0.0012 -
                      0.0020j, 0.0018 + 0.0007j, 0.0004 + 0.0031j, -0.0015 + 0.0031j, -0.0013
                      + 0.0009j, 0.0008 - 0.0021j, 0.0033 - 0.0031j, 0.0034 - 0.0015j,
                      -0.0003 + 0.0005j, -0.0051 + 0.0010j, -0.0070 - 0.0009j, -0.0036 -
                      0.0027j, 0.0038 - 0.0003j, 0.0092 + 0.0058j, 0.0080 + 0.0112j, 0.0007 +
                      0.0090j, -0.0064 - 0.0040j, -0.0078 - 0.0219j, -0.0017 - 0.0307j,
                      0.0066 - 0.0171j, 0.0081 + 0.0198j, -0.0031 + 0.0611j, -0.0191 +
                      0.0730j, -0.0203 + 0.0251j, 0.0119 - 0.0896j, 0.0793 - 0.2472j, 0.1592
                      - 0.3993j, 0.2156 - 0.4987j, 0.2249 - 0.5243j, 0.1965 - 0.4891j, 0.1749
                      - 0.4312j, 0.2108 - 0.3877j, 0.3193 - 0.3727j, 0.4560 - 0.3744j, 0.5286
                      - 0.3734j, 0.4520 - 0.3630j, 0.2128 - 0.3556j, -0.1011 - 0.3697j,
                      -0.3370 - 0.4045j, -0.3621 - 0.4318j, -0.1484 - 0.4118j, 0.2010 -
                      0.3282j, 0.5009 - 0.2103j, 0.5913 - 0.1258j, 0.4343 - 0.1391j, 0.1367 -
                      0.2619j, -0.1106 - 0.4332j, -0.1503 - 0.5468j, 0.0444 - 0.5152j, 0.3553
                      - 0.3285j, 0.5875 - 0.0685j, 0.5872 + 0.1357j, 0.3308 + 0.1848j,
                      -0.0619 + 0.0710j, -0.4015 - 0.1166j, -0.5336 - 0.2476j, -0.4145 -
                      0.2291j, -0.1183 - 0.0599j, 0.2145 + 0.1706j, 0.4558 + 0.3362j, 0.5469
                      + 0.3438j, 0.5111 + 0.1799j, 0.4193 - 0.0927j, 0.3439 - 0.3714j, 0.3245
                      - 0.5607j, 0.3596 - 0.6040j, 0.4152 - 0.4898j, 0.4484 - 0.2480j, 0.4286
                      + 0.0584j, 0.3497 + 0.3434j, 0.2351 + 0.5149j, 0.1257 + 0.5059j, 0.0566
                      + 0.3078j, 0.0354 - 0.0126j, 0.0329 - 0.3369j, -0.0008 - 0.5458j,
                      -0.1029 - 0.5758j, -0.2686 - 0.4430j, -0.4417 - 0.2280j, -0.5437 -
                      0.0232j, -0.5222 + 0.1191j, -0.3918 + 0.2095j, -0.2283 + 0.2951j,
                      -0.1266 + 0.4117j, -0.1398 + 0.5466j, -0.2431 + 0.6391j, -0.3462 +
                      0.6188j, -0.3479 + 0.4533j, -0.2018 + 0.1766j, 0.0512 - 0.1174j, 0.3006
                      - 0.3226j, 0.4250 - 0.3709j, 0.3579 - 0.2628j, 0.1192 - 0.0593j,
                      -0.1986 + 0.1473j, -0.4793 + 0.2782j, -0.6381 + 0.3012j, -0.6516 +
                      0.2399j, -0.5617 + 0.1536j, -0.4455 + 0.0992j, -0.3733 + 0.0982j,
                      -0.3791 + 0.1277j, -0.4488 + 0.1349j, -0.5342 + 0.0764j, -0.5845 -
                      0.0458j, -0.5739 - 0.1728j, -0.5155 - 0.2215j)
        expected_res = (0.0002 - 0.0002j, 0.0009 - 0.0009j, 0.0008 - 0.0008j,
                        -0.0000 + 0.0000j, -0.0007 + 0.0007j, -0.0002 + 0.0002j, 0.0005 -
                        0.0006j, 0.0009 - 0.0009j, 0.0007 - 0.0008j, 0.0006 - 0.0006j, -0.0001 +
                        0.0001j, -0.0009 + 0.0010j, -0.0012 + 0.0009j, -0.0012 - 0.0005j,
                        -0.0001 - 0.0016j, 0.0013 - 0.0015j, 0.0019 - 0.0004j, 0.0015 + 0.0005j,
                        -0.0003 + 0.0010j, -0.0022 + 0.0007j, -0.0027 - 0.0004j, -0.0016 -
                        0.0018j, 0.0011 - 0.0016j, 0.0032 + 0.0001j, 0.0030 + 0.0018j, 0.0008 +
                        0.0013j, -0.0021 - 0.0008j, -0.0034 - 0.0030j, -0.0020 - 0.0032j, 0.0006
                        + 0.0002j, 0.0023 + 0.0046j, 0.0014 + 0.0069j, -0.0011 + 0.0043j,
                        -0.0019 - 0.0033j, 0.0005 - 0.0108j, 0.0050 - 0.0128j, 0.0069 - 0.0059j,
                        0.0010 + 0.0075j, -0.0105 + 0.0208j, -0.0196 + 0.0237j, -0.0159 +
                        0.0090j, 0.0050 - 0.0208j, 0.0353 - 0.0500j, 0.0519 - 0.0547j, 0.0291 -
                        0.0140j, -0.0443 + 0.0787j, -0.1529 + 0.2098j, -0.2557 + 0.3456j,
                        -0.3088 + 0.4471j, -0.2934 + 0.4892j, -0.2319 + 0.4733j, -0.1802 +
                        0.4291j, -0.1915 + 0.3975j, -0.2763 + 0.4056j, -0.3853 + 0.4469j,
                        -0.4280 + 0.4855j, -0.3272 + 0.4786j, -0.0755 + 0.4075j, 0.2422 +
                        0.2970j, 0.4854 + 0.2039j, 0.5326 + 0.1842j, 0.3554 + 0.2556j, 0.0435 +
                        0.3824j, -0.2359 + 0.4894j, -0.3292 + 0.5071j, -0.1835 + 0.4175j, 0.1223
                        + 0.2689j, 0.4197 + 0.1539j, 0.5463 + 0.1522j, 0.4369 + 0.2767j, 0.1563
                        + 0.4579j, -0.1405 + 0.5746j, -0.3003 + 0.5225j, -0.2562 + 0.2791j,
                        -0.0594 - 0.0731j, 0.1601 - 0.3862j, 0.2734 - 0.5208j, 0.2240 - 0.4173j,
                        0.0510 - 0.1224j, -0.1402 + 0.2356j, -0.2408 + 0.5126j, -0.1931 +
                        0.6165j, -0.0105 + 0.5418j, 0.2418 + 0.3549j, 0.4828 + 0.1521j, 0.6477 +
                        0.0139j, 0.7027 - 0.0194j, 0.6402 + 0.0496j, 0.4762 + 0.1893j, 0.2489 +
                        0.3538j, 0.0165 + 0.4898j, -0.1516 + 0.5454j, -0.2004 + 0.4812j, -0.1204
                        + 0.2889j, 0.0371 + 0.0065j, 0.1774 - 0.2883j, 0.2081 - 0.5046j, 0.0900
                        - 0.5780j, -0.1407 - 0.4986j, -0.3849 - 0.3145j, -0.5344 - 0.1027j,
                        -0.5305 + 0.0739j, -0.3968 + 0.1998j, -0.2173 + 0.3033j, -0.0856 +
                        0.4222j, -0.0512 + 0.5619j, -0.0972 + 0.6768j, -0.1602 + 0.6907j,
                        -0.1749 + 0.5440j, -0.1159 + 0.2418j, -0.0071 - 0.1279j, 0.0972 -
                        0.4301j, 0.1473 - 0.5445j, 0.1257 - 0.4258j, 0.0515 - 0.1228j, -0.0393 +
                        0.2441j, -0.1157 + 0.5420j, -0.1636 + 0.6864j, -0.1791 + 0.6709j,
                        -0.1639 + 0.5588j, -0.1225 + 0.4396j, -0.0662 + 0.3803j, -0.0173 +
                        0.3996j, -0.0069 + 0.4686j, -0.0557 + 0.5367j, -0.1520 + 0.5663j,
                        -0.2418 + 0.5484j, -0.2527 + 0.5009j)

        # set up fg
        self.tb.run ()

        # Flowgraph
        samp_src = blocks.vector_source_c(rx_samples)
        freq_rec = blocksat.ffw_coarse_freq_req_cc(N_fft, alpha, M, samp_rate)
        samp_snk = blocks.vector_sink_c()
        self.tb.connect(samp_src, (freq_rec, 0))
        self.tb.connect(freq_rec, samp_snk)
        self.tb.run()
        samp_out = samp_snk.data()

        # Results
        self.assertFloatTuplesAlmostEqual(expected_res, samp_out, 3)


if __name__ == '__main__':
    gr_unittest.run(qa_ffw_coarse_freq_req_cc, "qa_ffw_coarse_freq_req_cc.xml")
