# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-blocksat
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

list(APPEND blocksat_sources
    constellation.cc
    da_carrier_phase_rec_impl.cc
    mer_measurement_impl.cc
    turbo_decoder_impl.cc
    aff3ct/Encoder_RSC_generic_sys.cpp
    aff3ct/Encoder_RSC_sys.cpp
    aff3ct/Decoder_NO.cpp
    aff3ct/Decoder_turbo.cpp
    aff3ct/Decoder_turbo_fast.cpp
    aff3ct/Puncturer_turbo.cpp
    aff3ct/exception.cpp
    aff3ct/invalid_argument.cpp
    aff3ct/length_error.cpp
    aff3ct/runtime_error.cpp
    aff3ct/unimplemented_error.cpp
    soft_decoder_cf_impl.cc
    agc_cc_impl.cc
    frame_synchronizer_cc_impl.cc
    ffw_coarse_freq_req_cc_impl.cc
)

set(blocksat_sources "${blocksat_sources}" PARENT_SCOPE)
if(NOT blocksat_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT blocksat_sources)

list(APPEND required_gr_libs
    gnuradio::gnuradio-runtime
    gnuradio::gnuradio-filter
    gnuradio::gnuradio-fft
    gnuradio::gnuradio-blocks
)

add_library(gnuradio-blocksat SHARED ${blocksat_sources})
target_link_libraries(gnuradio-blocksat ${required_gr_libs})
target_include_directories(gnuradio-blocksat
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-blocksat PROPERTIES DEFINE_SYMBOL "gnuradio_blocksat_EXPORTS")
set_target_properties(gnuradio-blocksat PROPERTIES DEFINE_SYMBOL "MULTI_PREC")

if(APPLE)
    set_target_properties(gnuradio-blocksat PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-blocksat)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_blocksat_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-blocksat)

if(NOT test_blocksat_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_blocksat_sources)

foreach(qa_file ${test_blocksat_sources})
    GR_ADD_CPP_TEST("blocksat_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
